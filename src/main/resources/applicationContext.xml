<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
  <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
    <property name="driverClass" value="org.postgresql.Driver"/>
    <property name="url" value="jdbc:postgresql://localhost:5432/toby-spring"/>
    <property name="username" value="follower"/>
    <property name="password" value="hello"/>
  </bean>
  <bean id="userDao" class="dao.UserDaoJdbc">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <bean id="mailSender" class="service.mock.DummyMailSender" />
  <bean id="userLevelUpgradePolicy" class="service.GeneralUserLevelUpgradePolicy">
    <property name="userDao" ref="userDao"/>
    <property name="mailSender" ref="mailSender"/>
  </bean>
  <!-- 내부 정적 클래스는 '$' 기호로 접근합니다. -->
  <bean id="testUserLevelUpgradePolicy" class="service.UserServiceTest$TestUserLevelUpgradePolicy" parent="userLevelUpgradePolicy" />
  <bean id="transactionAdvice" class="proxy.spring.advisor.TransactionAdvice">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>
  <bean id="transactionPointCut" class="proxy.spring.pointcut.NameMatchClassMethodPointcut">
    <property name="mappedClassName" value="*ServiceImpl"/>
    <property name="mappedName" value="upgrade*"/>
  </bean>
  <!-- 자동 프록시 생성기 처리 과정
  1. 등록된 빈 중에 Advisor 인터페이스를 구현한 것을 찾는다.
  2. 생성되는 모든 빈에 대해 어드바이저의 포인트컷을 적용해보면서 프록시 적용 대상을 찾는다.
  3. 빈 클래스가 프록시 선정 대상이라면 프록시를 만들어 원래 빈 오브젝트와 바꿔치기 한다.
  4. 원래 빈 오브젝트는 프록시 뒤에 연결돼서 프록시를 통해서만 접근 될 수 있도록 한다.
  -->
  <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
    <property name="pointcut" ref="transactionPointCut"/>
    <property name="advice" ref="transactionAdvice"/>
  </bean>
  <bean id="userService" class="service.UserServiceImpl">
    <property name="userDao" ref="userDao"/>
    <property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy"/>
  </bean>
  <bean id="transactionTestUserService" class="service.UserServiceTest$TestUserServiceImpl" parent="userService">
    <property name="userLevelUpgradePolicy" ref="testUserLevelUpgradePolicy"/>
  </bean>
  <!--자동 프록시 생성시 (빈 후처리기)-->
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
</beans>